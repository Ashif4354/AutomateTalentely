from json import dump

c = {"basic input output and data types": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[1]/div/div[3]/a", "conditional statements (if / while etc)": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[2]/div/div[3]/a", "looping": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[3]/div/div[3]/a", "patterns": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[4]/div/div[3]/a", "number crunching": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[5]/div/div[3]/a", "number based problems": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[6]/div/div[3]/a", "functions": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[7]/div/div[3]/a", "arrays": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[8]/div/div[3]/a", "strings": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[9]/div/div[3]/a", "bitwise operator": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[10]/div/div[3]/a", "2d array": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[11]/div/div[3]/a", "structure": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[12]/div/div[3]/a", "pointers": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[13]/div/div[3]/a", "time complexity": "//*[@id=\"main-content\"]/div/div[2]/div[3]/div[14]/div/div[3]/a"}

with open('c.json', 'w') as file:
    dump(c, file, indent=4)
